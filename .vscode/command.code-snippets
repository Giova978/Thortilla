{
    // Place your Typescript 12 Lavalink workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Command": {
        "scope": "typescript,javascript",
        "prefix": "cmt",
        "body": [
            "import Command from \"handlers/Command\";",
            "import { Message } from \"discord.js\";",
            "import Handler from 'handlers/Handler';",
            "import { IArgs } from 'utils';",
            "import TextChannelCS from 'models/discord/TextChannel';",
            "",
            "module.exports = class extends Command {",
            "	private handler: Handler;",
            "",
            "	constructor({ handler }: IArgs) {",
            "		super('$1',{",
            "			aliases: ['$2'],",
            "			permissions: ['$3'],"
            "			category: '$4',",
            "			description: '$5',",
            "			usage: '$6'",
            "		});",
            "",
            "		this.handler = handler;",
            "",
            "	}",
            "",
            "	public async run(message: Message, args: string[], channel: TextChannelCS) {",
            "		$7",
            "	}",
            "}",
        ],
        "description": "Create boilerplate for thortilla command"
    },
    "Guild": {
        "scope": "typescript,javascript",
        "prefix": "guild",
        "body": [
            "const guild: GuildDB = message.guild as GuildDB;"
        ],
        "description": "Re-define guild"
    },
    "Member": {
        "scope": "typescript,javascript",
        "prefix": "member",
        "body": [
            "const member: MemberDB = message.member as MemberDB;"
        ],
        "description": "Re-define member"
    },
    "Error": {
        "scope": "typescript,javascript",
        "prefix": "err",
        "body": "channel.error($1);$0"
    }
}